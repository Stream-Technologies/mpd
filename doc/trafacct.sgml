<!-- $Id: trafacct.sgml,v 1.6 2007/03/12 18:59:42 amotin Exp $ -->
<!-- mpd netgraph enabled user mode PPP daemon -->

<!-- <!DOCTYPE linuxdoc PUBLIC '-//FreeBSD//DTD linuxdoc//EN'> -->

  <sect><heading>Traffic accounting<label id="trafacct"></heading>

<p>

  Mpd supports several methods of traffic accounting:

<sect1><heading>NetFlow<label id="netflow"></heading>
<p>
  NetFlow is a protocol for exporting aggregated traffic information
  with UDP packets flow. NetFlow is generated by <tt>ng_netflow(4)</tt> node.
  To enable NetFlow on a particular interface <tt>netflow-in</tt> or
  <tt>netflow-out</tt> options should be used. Best practice is to enable
  netflow on every interface in system in only one direction:
  incoming for "ingress" flow or outgoing for "egress" flow.

  <bf>Note:</bf> Netflow configuration is global for the daemon, 
  so it must be done before first bundle get connected.

  <bf>Note:</bf> This feature is available only on FreeBSD 6.0-RELEASE
  and newer.

<descrip>

<tag><tt>
set netflow export <em>ip</em> <em>port</em>
</tt></tag>

Set destination IP address and port, where NetFlow export datagrams
will be sent. This options is important to have working NetFlow.

<tag><tt>
set netflow source <em>ip</em> <em>port</em>
</tt></tag>

Set optional local IP and port binding, to make NetFlow datagrams
originate from a specific source.

<tag><tt>
set netflow timeouts <em>inactive</em> <em>active</em>
</tt></tag>

Modify inactive and active timeout values. For more information, see
<tt>ng_netflow(4)</tt> manual page.

<tag><tt>
set netflow node <em>nodename</em>
</tt></tag>

Use existing <tt>ng_netflow(4)</tt> node instead of creating a new one.

<tag><tt>
set netflow hook <em>number</em>
</tt></tag>

Use <tt>ng_netflow(4)</tt> node's hooks starting from specified number. 
For detailed information about naming of hooks, see <tt>ng_netflow(4)</tt>
manual page.

</descrip>

<sect1><heading>IP Accounting<label id="ipacct"></heading>
<p>
  IP Accounting accumulates traffic information in kernel buffer. This buffer
  can be periodically readed and flushed by some other program. IP Accounting
  implemented by <tt>ng_ipacct</tt> node. To enable IP Accounting on a
  particular interface <tt>ipacct</tt> options should be used.

<sect1><heading>Accounting Update</heading>
<p>
  Mpd provides summary traffic statistics in every accounting Update/Stop
  call of radius-acct or ext-acct.

  For radius-acct it provides such attributes:
<descrip>
<tag><tt>Acct-Input-Packets</tt></tag> 32bit input packets counter,
<tag><tt>Acct-Output-Packets</tt></tag> 32bit output packets counter,
<tag><tt>Acct-Input-Octets</tt></tag> lower 32bit of input bytes counter,
<tag><tt>Acct-Output-Octets</tt></tag> lower 32bit of output bytes counter,
<tag><tt>Acct-Input-Gigawords</tt></tag> higher 32bit of input bytes counter,
<tag><tt>Acct-Output-Gigawords</tt></tag> higher 32bit of output bytes counter.
</descrip>
  
  For ext-acct it provides:
<descrip>
<tag><tt>ACCT_INPUT_PACKETS</tt></tag> 64bit input packets counter,
<tag><tt>ACCT_OUTPUT_PACKETS</tt></tag> 64bit input packets counter,
<tag><tt>ACCT_INPUT_OCTETS</tt></tag> 64bit input bytes counter,
<tag><tt>ACCT_OUTPUT_OCTETS</tt></tag> 64bit input bytes counter.
</descrip>

  
</p>
